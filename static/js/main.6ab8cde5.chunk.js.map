{"version":3,"sources":["TodoForm.js","Todo.js","TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","handleChange","e","target","useEffect","current","focus","className","onSubmit","preventDefault","id","uuidv4","text","complete","type","placeholder","name","onChange","ref","Todo","todos","toggleTodo","removeTodo","updateTodo","setEdit","map","todo","index","onClick","LOCAL_STORAGE_KEY","TodoList","setTodos","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","test","newTodos","find","removeArr","filter","todoID","newValue","prevTodos","item","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ab8cde5.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null)\n\n  useEffect(() => {\n    inputRef.current.focus()\n  })\n\n  function handleChange(e){\n    setInput(e.target.value);\n  }\n\n  function handleSubmit(e) {\n      e.preventDefault();\n\n      props.onSubmit({\n          id: uuidv4(),\n          text: input,\n          complete: false\n      })\n\n      setInput('')\n  }\n\n  \n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n        {props.edit ? ( \n            <>\n            <input \n                type=\"text\" \n                placeholder='Update task' \n                value={input}\n                name=\"text\"\n                className=\"todo-input edit\"\n                onChange={handleChange}\n                ref={inputRef}\n            />\n            <button className='todo-button edit'>Update</button>\n            </>\n        ) : (\n            <>\n            <input \n                type=\"text\" \n                placeholder='Enter task' \n                value={input}\n                name=\"text\"\n                className=\"todo-input\"\n                onChange={handleChange}\n                ref={inputRef}\n            />\n            <button className='todo-button'>Add</button>\n            </>\n        ) }\n    </form>\n  )\n}\n\n","import React, { useState } from 'react'\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri'\nimport { TiEdit } from 'react-icons/ti'\n\nexport default function Todo({ todos, toggleTodo, removeTodo, updateTodo }) {\n\n    const [edit, setEdit] = useState({\n        id: null,\n        name: ''\n    });\n\n    function submitUpdate(value) {\n        updateTodo(edit.id, value)\n        setEdit({\n            id: null,\n            name: ''\n        })\n    }\n\n    if(edit.id) {\n        return (\n            <TodoForm edit={edit} onSubmit={submitUpdate} />\n        )\n    }\n\n    // function handleTodoClick() {\n    //     toggleTodo(todo.id)\n    // }\n\n    \n\n    return todos.map((todo, index) => (\n        <div\n        className={todo.complete ? 'todo-row complete' : 'todo-row'}\n        key={index}\n        >\n            <div \n            className='todo-text'\n            key={todo.id} \n            onClick={() => toggleTodo(todo.id)}>\n                {todo.text}\n            </div>\n\n            <div className=\"icons\">\n                <RiCloseCircleLine\n                onClick={() => removeTodo(todo.id)}\n                className=\"delete-icon\" \n                />\n                <TiEdit\n                onClick={() => setEdit({id: todo.id, value: todo.text})}\n                className=\"edit-icon\" \n                />\n            </div>\n            \n        </div>\n    ));\n\n\n\n \n    \n\n\n}\n","import React, { useState, useEffect } from 'react'\nimport Todo from './Todo'\nimport TodoForm from './TodoForm'\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nexport default function TodoList() {\n    const [todos, setTodos] = useState([]);\n\n \n    function addTodo(todo) {\n        if (!todo.text || /^\\s*$/.test(todo.text)) return;\n\n        const newTodos = [todo, ...todos];\n        setTodos(newTodos);\n\n    }\n\n    function toggleTodo(id) {\n            const newTodos = [...todos]\n            const todo = newTodos.find(todo => todo.id === id)\n            todo.complete = !todo.complete\n            setTodos(newTodos);\n        }\n\n    function updateTodo(todoID, newValue) {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) return\n            \n        setTodos(prevTodos => prevTodos.map(item => (\n            item.id === todoID ? newValue : item)\n            ))\n            \n        }\n\n    function removeTodo(id) {\n        const removeArr = [...todos].filter(todo => todo.id !== id)\n            \n            setTodos(removeArr)\n        }\n\n  function handleClearTodos(e) {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n\n\n    useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n\n    }, [])\n\n    useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n    }, [todos])\n    \n\n\n\n    return (\n        <div>\n            <h1 className=\"title\">Tasks for Today</h1>\n            <TodoForm  onSubmit={addTodo} />\n            <Todo todos={todos} toggleTodo={toggleTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\n            <br/>\n            {todos.length > 0 && <button className=\"clear-todos-button\" onClick={handleClearTodos}>Clear Complete</button> }\n            {todos.length > 0 && <p className=\"todo-counter\">{todos.filter(todo => !todo.complete).length} left to do</p> }\n            <div className=\"footer\">\n                Made By Gino Swanepoel with React <br/>\n                Â© All rights reserved.\n            </div>\n        </div>\n        \n    )\n\n\n\n\n}\n","import React from 'react'\nimport './App.css'\nimport TodoList from './TodoList'\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}